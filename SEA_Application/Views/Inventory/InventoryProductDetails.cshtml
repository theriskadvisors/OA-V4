
@if (User.IsInRole("Admin"))
{
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

else if (User.IsInRole("Receptionist"))
{
    Layout = "~/Views/Shared/_ReceptionistDashboardLayout.cshtml";

}
else if (User.IsInRole("BakeryAdmin"))
{

    Layout = "~/Views/Shared/_BakeryAdminDashboardLayout.cshtml";

}
else if (User.IsInRole("InventoryManager"))
{
    Layout = "~/Views/Shared/_InventoryManagerDashboardLayout.cshtml";
}
else
{
    Layout = null;

}

<div class="card">
    <div class="card-body p-4">
        <input type="hidden" name="InventoryId" id="InventoryId" value="@ViewBag.InventoryId" />

        <input type="hidden" id="InventoryName" name="name" value="@ViewBag.InventoryName" />

        <table class="table hover table-striped table-bordered" id="datatable">
            <thead>

                <tr>
                    <th>
                        Order
                    </th>

                    <th>
                        Date
                    </th>
                    <th>
                        Transaction
                    </th>
                    <th>
                        Supplier
                    </th>

                    <th>
                        Quantity On Hand
                    </th>

                    <th>
                        Remaining Quantity
                    </th>

                    <th>Action</th>
                </tr>
            </thead>

            <tbody id="RawProducts">
            </tbody>


        </table>

    </div>
</div>

<script>


    $(document).ready(function () {

        var table;
        table = $('#datatable').dataTable({

            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],

            buttons: [

                //{
                //    text: '<span class="datatableButtonsEdit"> Return Order</span>',
                //    action: function (e, dt, button, config) {
                //        window.location.href = "/AspNetNotes/ReturnOrder";
                //    }
                //},
                //{
                //    text: '<span class="datatableButtonsEdit"> Place Order</span>',
                //    action: function (e, dt, button, config) {
                //        window.open('/AspNetNotes/PlaceOrder');
                //    }
                //},
                //{
                //    text: '<span class="datatableButtonsEdit"> Print Notes</span>',
                //    action: function (e, dt, button, config) {
                //        window.location.href = "/AspnetNotes/notesprint";
                //    }
                //},

                {
                    text: '<span class="datatableButtonsDownload"> <img src="/Content/assets/assets/icons/Icon-download.png" alt=""> Download</span>'
                }
            ],
            "order": [[0, "desc"]],
            "language": {
                "lengthMenu": "<div class=\"d-flex showEntriesCon\">\n" +
                    "  <div class=\"p-2\">Show </div> <div class=\"showEntries\"> _MENU_\n" +
                    "  </div>\n" +
                    "  </div>",
                "info": "<div class='showingEntriesOfTotal'>Showing <span class=\"text-info\">_START_ to _END_</span> of _TOTAL_ entries</div>",
                "paginate": {
                    "first": "Firstt",
                    "last": "Lastt",
                    "next": ' <img src="~/Content/assets/assets/icons/Arrow2.png" alt=""> ',
                    "previous": ' <img src="~/Content/assets/assets/icons/Arrow1.png" alt=""> '
                }
            },
            "searching": true,
            // dom: '<"class">Blfrtip',
            dom: "<'row mb-3'<'col-sm-12 col-md-2 col-lg-2'l><'col-sm-12 col-md-10 col-lg-10 datatableButtonsCon text-right'Bf>>" +
                "<'row'<'col-sm-12 datatablesData'tr>>" +
                "<'row mt-4'<'col-sm-12 col-md-4 col-lg-6 infoCon'i><'col-sm-12 col-md-8 col-lg-6 pagCon'p>>",
        });

        var InventoryId = $("#InventoryId").val();


        $.ajax({
            type: "POST",
            url: "/Inventory/InventoryProductDetailsList?InventoryId=" + InventoryId,

            success: function (data) {
                table.fnClearTable();

                var TotalRemainingQuantity = 0;
                var TotalRemainingBalance = 0;

                $.each(data, function (index) {

                    var value = new Date(parseInt(data[index].CreationDate.replace(/(^.*\()|([+-].*$)/g, '')));
                    var dat = value.getMonth() +
                        1 +
                        "/" +
                        value.getDate() +
                        "/" +
                        value.getFullYear();


                    TotalRemainingQuantity = TotalRemainingQuantity + data[index].QuantityOnHand;
                    TotalRemainingBalance = TotalRemainingBalance + data[index].Amount;


                    if (data[index].TranscationName == "Purchased Order") {
                        table.fnAddData([data[index].Order, dat, data[index].TranscationName, data[index].SupplierName, '<span style="font-weight:bold !important;">' + data[index].QuantityOnHand + '</span>', data[index].Balance, "<input  onclick='PurchaseOrder(" + data[index].Id + ")'  style='color:white !important' class='btn btn-sm btn-primary' type ='button' value ='View Details' />"]);

                    }


                    //Purchase Order (Returned)
                    else if (data[index].TranscationName == "Purchase Order (Returned)") {

                        table.fnAddData([data[index].Order, dat, data[index].TranscationName, data[index].SupplierName, '<span style="font-weight:bold !important;color:red !important">' + data[index].QuantityOnHand + '</span>', data[index].Balance, "<input  onclick='PurchaseOrder(" + data[index].Id + ")'  style='color:white !important' class='btn btn-sm btn-primary' type ='button' value ='View Details' />"]);


                    }
                    else if (data[index].TranscationName == "Sale Order (Paid)") {


                        table.fnAddData([data[index].Order, dat, data[index].TranscationName, data[index].SupplierName, '<span style="font-weight:bold !important;color:red !important">' + data[index].QuantityOnHand + '</span>', data[index].Balance, "<input  onclick='SaleOrder(" + data[index].Id + ")'  style='color:white !important' class='btn btn-sm btn-primary' type ='button' value ='View Details' />"]);

                    }

                    else if (data[index].TranscationName == "Sale Order (Returned)") {
                        table.fnAddData([data[index].Order, dat, data[index].TranscationName, data[index].SupplierName, '<span style="font-weight:bold !important;">' + data[index].QuantityOnHand + '</span>', data[index].Balance, "<input  onclick='SaleOrder(" + data[index].Id + ")'  style='color:white !important' class='btn btn-sm btn-primary' type ='button' value ='View Details' />"]);

                    }
                    else {
                        table.fnAddData([data[index].Order, dat, data[index].TranscationName, data[index].SupplierName, data[index].PurchasePrice, '<span style="font-weight:bold !important;">' + data[index].QuantityOnHand + '</span>', data[index].Balance, data[index].AverageCost, data[index].Amount, data[index].TotalAmountBalance, "<input  onclick='PurchaseOrder(" + data[index].Id + ")'  style='color:white !important' class='btn btn-sm btn-primary' type ='button' value ='View Details' />"]);

                    }


                });


                table.fnAddData([" ", " ", " ", " ", TotalRemainingQuantity, " ", ""]);


                table.fnDraw();



                var AllTds = $("td:nth-child(4),td:nth-child(5)");

                for (var i = 0; i < AllTds.length; i++) {

                    var CommaSeparatedValue = numberWithCommas(AllTds[i].innerHTML);

                    AllTds[i].innerHTML = CommaSeparatedValue;
                }

            }

        });

        var InventoryName = $("#InventoryName").val();
        //  $('tr th:nth-child(1)').hide();

        // $(documnet).find("table tr td:first-child").hide();
        $("#PageHeader").html(InventoryName);
    })

    function numberWithCommas(x) {
        debugger
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }


    function ProductionOrder(InventoryId) {

        window.location.href = "/Inventory/ProductionOrderDetails?id=" + InventoryId;

    }

    function SaleOrder(InventoryId) {

        window.location.href = "/Sales/ViewSaleOrderDetails?id=" + InventoryId;

    }


    function PurchaseOrder(InventoryId) {

        window.location.href = "/Inventory/PurchaseOrderDetails?id=" + InventoryId;

    }
</script>